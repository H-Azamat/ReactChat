{"version":3,"sources":["redux/store.js","firebase.js","assets/img/loading.gif","components/common/Loading/Loading.jsx","api/api.js","App.js","index.js"],"names":["SET_CURRENT_USER","UPDATE_MESSAGES","SET_USERS","initialState","messages","users","currentUser","isInitial","setCurrentUser","uid","username","userImg","description","social","type","updateMessages","setUsers","store","createStore","state","action","window","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Loading","className","src","loading","alt","db","firestore","authApi","signIn","e","email","password","setIsRedirect","a","preventDefault","auth","signInWithEmailAndPassword","then","userCredential","user","emailVerified","alert","catch","error","register","setIsSendVerification","createUserWithEmailAndPassword","trim","updateProfile","displayName","collection","doc","set","img","github","instagram","telegram","vk","youtube","userId","sendEmailVerification","message","sendEmail","logout","signOut","messagesApi","sendMessage","date","id","add","key","Date","sendMessageWithImg","dataImg","size","profileApi","update","photoURL","getUserProfile","get","getUsers","onSnapshot","snapshot","forEach","push","data","onAuthStateChanged","from","to","filter","item","ChatContainer","lazy","ProfileContainer","Login","Register","Error","connect","useEffect","fetchData","exact","path","render","fallback","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.41d78541.chunk.js","sourcesContent":["import {createStore} from \"redux\";\n\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\";\nconst UPDATE_MESSAGES = \"UPDATE_MESSAGES\";\nconst SET_USERS = \"SET_USERS\";\n\nlet initialState = {\n    messages: [],\n    users: [],\n    currentUser: {},\n    isInitial: false\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                currentUser: {...action.currentUser},\n                isInitial: action.isInitial\n            }\n        case UPDATE_MESSAGES:\n            return {\n                ...state,\n                messages: [...action.messages]\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [\n                    ...action.users\n                ]\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setCurrentUser = (uid = '', username = '', userImg = null, description = '', social = {}, isInitial = false) => {\n    return {type: SET_CURRENT_USER, currentUser: {uid, username, userImg, description, social}, isInitial}\n}\n\nexport const updateMessages = (messages) => {\n    return {type: UPDATE_MESSAGES, messages}\n}\n\nexport const setUsers = (users) => {\n    return {type: SET_USERS, users}\n}\n\nconst store = createStore(messagesReducer);\n\nwindow.store = store;\nexport default store;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDz6pSdf4LCf1YQn5x76haqeGwwPDTvP_U\",\n    authDomain: \"reactchat-b8de4.firebaseapp.com\",\n    projectId: \"reactchat-b8de4\",\n    storageBucket: \"reactchat-b8de4.appspot.com\",\n    messagingSenderId: \"318740535879\",\n    appId: \"1:318740535879:web:7c66edf44f5ebf3e09ef62\"\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n\nexport default firebase;","export default __webpack_public_path__ + \"static/media/loading.ad992768.gif\";","import loading from '../../../assets/img/loading.gif';\n\nconst Loading = () => {\n    return(\n        <div className=\"loading\">\n            <img src={loading} alt=\"loading...\" className=\"loading-gif\" />\n        </div>\n    )\n}\n\nexport default Loading;","import firebase from \"../firebase\";\nimport 'firebase/auth';\nimport {setCurrentUser} from \"../redux/store\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const db = firebase.firestore();\n\nexport const authApi = {\n\n    signIn: async (e, email, password, setIsRedirect) => {\n        e.preventDefault();\n        await firebase.auth().signInWithEmailAndPassword(email, password)\n            .then((userCredential) => {\n                const user = userCredential.user;\n                if (user && user.emailVerified) {\n                    setIsRedirect(true)\n                } else {\n                    alert(\"Не верные данные или аккаунт не подтвержден\")\n                }\n            })\n            .catch((error) => {\n                alert(\"Не верные данные или аккаунт не подтвержден\");\n            });\n    },\n\n    register: async (e, email, password, username, setIsSendVerification) => {\n        e.preventDefault();\n        await firebase.auth().createUserWithEmailAndPassword(email.trim(), password.trim())\n            .then((userCredential) => {\n                let user = userCredential.user;\n                user.updateProfile({\n                    displayName: username\n                })\n\n                db.collection(\"users\").doc(user.uid).set({\n                    username,\n                    img: null,\n                    description: \"\",\n                    social: {\n                        github: null,\n                        instagram: null,\n                        telegram: null,\n                        vk: null,\n                        youtube: null\n                    },\n                    userId: user.uid\n                })\n\n                user.sendEmailVerification().then(() => {\n                    setIsSendVerification(true)\n                }).catch((error) => {\n                    alert(error.message)\n                })\n            })\n            .catch((error) => {\n                alert(error.message);\n                throw error\n            });\n    },\n\n    sendEmail: async (setIsSendVerification) => {\n        const user = firebase.auth().currentUser;\n        await user.sendEmailVerification()\n            .then(() => {\n                setIsSendVerification(true)\n            })\n            .catch((error) => {\n                alert(error.message)\n            })\n    },\n\n    logout: async () => {\n        await firebase.auth().signOut();\n    }\n}\n\nexport const messagesApi = {\n    sendMessage: async (message, date, id) => {\n        if (message) {\n            await db.collection('messages').add({\n                message,\n                id,\n                date,\n                type: 'text',\n                key: new Date()\n            })\n        }\n    },\n    sendMessageWithImg: async (dataImg, date, id) => {\n        if (dataImg.src && dataImg.size <= 5000000 &&\n            (dataImg.type === 'image/png' || dataImg.type === 'image/jpeg') ) {\n            await db.collection('messages').add({\n                img: dataImg.src,\n                id,\n                date,\n                type: 'img',\n                key: new Date()\n            })\n            return 'Фотография успешна отправлена :)';\n        }else if(dataImg.size > 500000){\n            return 'Мы не принимаем фотографии более 5мб :('\n        }else if(dataImg.type !== 'image/png' || dataImg.type !== 'image/jpeg'){\n            return 'Мы принимаем фотографии с расширением .png/jpg :)'\n        }\n    }\n}\n\nexport const profileApi = {\n    updateProfile: async (img, username, description, social) => {\n        const user = firebase.auth().currentUser;\n\n        await db.collection(\"users\").doc(user.uid).update({\n            username,\n            img,\n            description,\n            social\n        }).then(() => {\n            setCurrentUser(user.uid, username, img, description, true);\n        })\n\n        await user.updateProfile({\n            displayName: username,\n            photoURL: img,\n            description\n        }).then(() => {\n            setCurrentUser(user.uid, username, img, description, true);\n        })\n    },\n    getUserProfile: async (userId) => await db.collection(\"users\").doc(userId).get(),\n    getUsers: async (setCurrentUser, setUsers) => {\n        await db.collection(\"users\").onSnapshot((snapshot) => {\n            let users = [];\n            snapshot.forEach(doc => users.push({\n                userId: doc.data().userId,\n                img: doc.data().img,\n                username: doc.data().username,\n                description: doc.data().description,\n                social: doc.data().social\n            }));\n            setUsers(users);\n            firebase.auth().onAuthStateChanged((user) => {\n                if (user) {\n                    const currentUser = users.filter(item => item.userId === user.uid)[0];\n                    setCurrentUser(currentUser.userId, currentUser.username, currentUser.img, currentUser.description, currentUser.social, true);\n                } else {\n                    setCurrentUser('', '', null, '', {}, true);\n                    return <Redirect from='/' to=\"/login\"/>\n                }\n            })\n        })\n    }\n}\n","import {Suspense, lazy, useEffect} from 'react';\nimport {Redirect, Route, Switch}  from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {setCurrentUser, setUsers} from \"./redux/store\";\nimport './App.css';\n\nimport Loading from './components/common/Loading/Loading';\nimport {profileApi} from \"./api/api\";\n\nconst ChatContainer = lazy(() => import('./components/Chat/ChatContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst Login = lazy(() => import('./components/Login/Login'));\nconst Register = lazy(() => import('./components/Register/Register'));\nconst Error = lazy(() => import('./components/Error/Error'));\n\nfunction App({setCurrentUser, isInitial, setUsers}){\n\n    const getUsers = async () => {\n        await profileApi.getUsers(setCurrentUser, setUsers)\n    }\n\n\tuseEffect(() => {\n\t    const fetchData = async () => {\n            await getUsers();\n        }\n        fetchData()\n\t})\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{isInitial\n\t\t\t\t? <div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/chat\" render={() => <Suspense fallback={<Loading />}><ChatContainer /></Suspense> } />\n\t\t\t\t\t\t<Route exact path=\"/profile/:userId?\" render={() => <Suspense fallback={<Loading />}><ProfileContainer /></Suspense> } />\n\t\t\t\t\t\t<Route path=\"/login\" render={() => <Suspense fallback={<Loading />}><Login /></Suspense> } />\n\t\t\t\t\t\t<Route path=\"/register\" render={() => <Suspense fallback={<Loading />}><Register /></Suspense> } />\n\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"/chat\" />\n\t\t\t\t\t\t<Route path=\"*\" render={() => <Suspense fallback={<Loading />}><Error /></Suspense>} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t: <Loading />\n\t\t\t}\t\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (store) => ({\n\tisInitial: store.isInitial\n})\n\nexport default connect(mapStateToProps, {setUsers, setCurrentUser})(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}