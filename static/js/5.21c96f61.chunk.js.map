{"version":3,"sources":["assets/img/userImg.svg","assets/img/logo.svg","assets/img/arrow.svg","components/Header.jsx","components/Profile/ProfileSocial.jsx","assets/img/back.svg","assets/img/edit.svg","assets/img/check.svg","assets/img/edit-white.svg","components/Profile/ProfileSocialEdit.jsx","components/Profile/ProfileEdit.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["Modal","setAppElement","connect","state","username","currentUser","userImg","users","useState","isHidden","setIsHidden","modalIsOpen","setModalIsOpen","className","src","logo","alt","onClick","arrow","style","backgroundImage","defaultImg","to","width","height","viewBox","fill","xmlns","d","authApi","logout","isOpen","onRequestClose","content","top","left","right","bottom","marginRight","transform","overlay","backgroundColor","map","user","userId","img","ProfileSocial","social","telegram","href","target","rel","clipPath","id","github","youtube","instagram","vk","ProfileSocialEdit","setSocial","setTelegram","setGithub","setYoutube","setVk","setInstagram","updateSocial","arr","filterSocial","item","defaultValue","type","onChange","e","currentTarget","value","ProfileEdit","props","setUsername","description","setDescription","setImg","newImg","setNewImg","updateImg","a","preventDefault","updateProfile","setIsEdit","back","check","editWhite","maxLength","rows","onSubmit","placeholder","pattern","title","required","Profile","isEdit","useEffect","isFound","Header","isCurrent","edit","ProfileContainer","refreshProfile","match","params","profileApi","getUserProfile","then","doc","data","res","setState","isLoading","isRedirect","firebase","auth","emailVerified","this","prevProps","prevState","Loading","Component","compose","store","withRouter"],"mappings":"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","file":"static/js/5.21c96f61.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/userImg.741810bd.svg\";","export default __webpack_public_path__ + \"static/media/logo.f869ddb0.svg\";","export default __webpack_public_path__ + \"static/media/arrow.af89e6b9.svg\";","import { connect } from 'react-redux';\nimport {useState} from \"react\";\n\nimport logo from '../assets/img/logo.svg';\nimport arrow from '../assets/img/arrow.svg';\nimport defaultImg from '../assets/img/userImg.svg';\nimport {authApi} from \"../api/api\";\nimport {NavLink} from \"react-router-dom\";\nimport Modal from \"react-modal\";\n\nModal.setAppElement('#root');\n\nconst Header = ({username, userImg, users}) => {\n\n    const customStyles = {\n        content : {\n            top                   : '50%',\n            left                  : '50%',\n            right                 : 'auto',\n            bottom                : 'auto',\n            marginRight           : '-50%',\n            transform             : 'translate(-50%, -50%)'\n        },\n        overlay: {\n            backgroundColor       : 'rgba(51, 51, 51, 0.6)'\n        }\n    };\n\n    let [isHidden, setIsHidden] = useState(true);\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n\n    return(\n        <div className=\"header\">\n            <div className=\"container\">\n                <img src={logo} alt=\"ReactChat\" className=\"header-logo\" />\n\n                <div className=\"header-info\" onClick={() => setIsHidden(!isHidden)}>\n                    <div className=\"header-toProfile\">\n                        <img src={arrow} alt=\"arrow\" className={`header-arrow ${!isHidden ? 'rotate' : ''}`}/>\n                        <span className=\"header-username\">{username}</span>\n                        {userImg\n                            ? <div className=\"header-img\" style={{backgroundImage: `url(${userImg})`}} />\n                            : <div className=\"header-img\" style={{backgroundImage: `url(${defaultImg})`}} />\n                        }\n                    </div>\n                </div>\n\n                <div className={`header-menu ${isHidden ? 'hidden' : ''}`}>\n                    <NavLink to={'/profile'} className=\"header-item\">\n                        <svg className='header-item-img' width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"#333\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M7.895 7.97031C9.96267 7.97031 11.6386 6.29423 11.6386 4.22667C11.6386 2.15921 9.96267 0.483032 7.895 0.483032C5.82754 0.483032 4.15137 2.15921 4.15137 4.22667C4.15296 6.29354 5.82814 7.96872 7.895 7.97031ZM7.895 1.11753C9.6122 1.11753 11.0041 2.50948 11.0041 4.22667C11.0041 5.94386 9.6122 7.33581 7.895 7.33581C6.17801 7.33581 4.78587 5.94386 4.78587 4.22667C4.78875 2.51077 6.1791 1.12031 7.895 1.11753Z\"/>\n                            <path d=\"M7.89497 8.90625C6.26755 8.90625 4.75415 9.53757 3.63113 10.6861C2.49213 11.8504 1.86707 13.4398 1.86707 15.1659C1.86756 15.3408 2.00938 15.4826 2.18437 15.4831H13.6057C13.7808 15.4826 13.9224 15.3408 13.9229 15.1659C13.9229 13.4431 13.2979 11.8504 12.159 10.6893C11.0359 9.54075 9.52258 8.90625 7.89497 8.90625ZM2.50802 14.8486C2.57784 13.4146 3.13299 12.1043 4.08161 11.1334C5.08416 10.1086 6.43887 9.54403 7.89189 9.54403C9.34492 9.54403 10.6996 10.1086 11.7021 11.1334C12.6539 12.1043 13.2059 13.4146 13.2758 14.8486H2.50802Z\"/>\n                        </svg>\n                        <span className='header-item-text'>Профиль</span>\n                    </NavLink>\n                    <div className=\"header-item\">\n                        <svg className='header-item-img' width=\"17\" height=\"17\" viewBox=\"0 0 17 17\" fill=\"#333\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M14.7026 7.85247C15.2004 7.50265 15.5301 6.92073 15.5301 6.26482C15.5301 5.19181 14.6622 4.32398 13.5892 4.32398C12.5162 4.32398 11.6484 5.19181 11.6484 6.26482C11.6484 6.92073 11.9747 7.50265 12.4759 7.85247C12.0487 8.00047 11.6585 8.2292 11.3288 8.52521C10.8748 8.13838 10.3399 7.84238 9.75465 7.66747C10.4644 7.23692 10.942 6.45318 10.942 5.56181C10.942 4.20289 9.8421 3.10297 8.48318 3.10297C7.12426 3.10297 6.02434 4.20625 6.02434 5.56181C6.02434 6.45318 6.49861 7.23692 7.21171 7.66747C6.63316 7.84238 6.10507 8.13502 5.65433 8.51512C5.32469 8.22584 4.94123 8.00047 4.52078 7.85584C5.0186 7.50601 5.34824 6.9241 5.34824 6.26818C5.34824 5.19517 4.48041 4.32734 3.4074 4.32734C2.33439 4.32734 1.46656 5.19517 1.46656 6.26818C1.46656 6.9241 1.79284 7.50601 2.29402 7.85584C0.958646 8.31666 0 9.58476 0 11.0749V11.2969C0 11.3036 0.00672734 11.3103 0.0134547 11.3103H4.12723C4.10368 11.4953 4.09023 11.6871 4.09023 11.8788V12.1075C4.09023 13.0964 4.89078 13.897 5.8797 13.897H11.0934C12.0823 13.897 12.8829 13.0964 12.8829 12.1075V11.8788C12.8829 11.6871 12.8694 11.4953 12.8459 11.3103H16.9865C16.9933 11.3103 17 11.3036 17 11.2969V11.0749C16.9933 9.5814 16.038 8.31329 14.7026 7.85247ZM12.1866 6.26145C12.1866 5.48781 12.8156 4.8588 13.5892 4.8588C14.3629 4.8588 14.9919 5.48781 14.9919 6.26145C14.9919 7.02501 14.3763 7.64729 13.6161 7.66411C13.6061 7.66411 13.5993 7.66411 13.5892 7.66411C13.5791 7.66411 13.5724 7.66411 13.5623 7.66411C12.7988 7.65065 12.1866 7.02837 12.1866 6.26145ZM6.5558 5.56181C6.5558 4.50225 7.4169 3.64115 8.47645 3.64115C9.53601 3.64115 10.3971 4.50225 10.3971 5.56181C10.3971 6.58437 9.59319 7.42192 8.58746 7.4791C8.55046 7.4791 8.51345 7.4791 8.47645 7.4791C8.43945 7.4791 8.40245 7.4791 8.36545 7.4791C7.35971 7.42192 6.5558 6.58437 6.5558 5.56181ZM1.99466 6.26145C1.99466 5.48781 2.62366 4.8588 3.39731 4.8588C4.17095 4.8588 4.79996 5.48781 4.79996 6.26145C4.79996 7.02501 4.18441 7.64729 3.42422 7.66411C3.41413 7.66411 3.4074 7.66411 3.39731 7.66411C3.38722 7.66411 3.38049 7.66411 3.3704 7.66411C2.61021 7.65065 1.99466 7.02837 1.99466 6.26145ZM4.22141 10.7688H0.544915C0.69628 9.33585 1.9072 8.21239 3.37713 8.20229C3.38385 8.20229 3.39058 8.20229 3.39731 8.20229C3.40404 8.20229 3.41076 8.20229 3.41749 8.20229C4.11713 8.20566 4.75623 8.46466 5.25069 8.88512C4.76632 9.40985 4.40641 10.0557 4.22141 10.7688ZM12.3379 12.1075C12.3379 12.7971 11.7762 13.3588 11.0867 13.3588H5.87297C5.18342 13.3588 4.62169 12.7971 4.62169 12.1075V11.8788C4.62169 9.78995 6.29007 8.0812 8.36545 8.02066C8.40245 8.02402 8.44282 8.02402 8.47982 8.02402C8.51682 8.02402 8.55718 8.02402 8.59418 8.02066C10.6696 8.0812 12.3379 9.78995 12.3379 11.8788V12.1075ZM12.7382 10.7688C12.5532 10.059 12.2 9.42331 11.719 8.89857C12.2169 8.46802 12.8627 8.20902 13.5691 8.20229C13.5758 8.20229 13.5825 8.20229 13.5892 8.20229C13.596 8.20229 13.6027 8.20229 13.6094 8.20229C15.0793 8.21239 16.2903 9.33585 16.4416 10.7688H12.7382Z\"/>\n                        </svg>\n\n                        <span onClick={() => setModalIsOpen(true)} className='header-item-text'>Пользователи</span>\n                    </div>\n                    <div className=\"header-item\" onClick={() =>  authApi.logout() }>\n                        <svg className='header-item-img' width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"#333\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M10.3333 12C10.1491 12 10 12.1491 10 12.3333V14.6667C10 15.0342 9.70084 15.3333 9.33334 15.3333H1.33334C0.965844 15.3333 0.666687 15.0342 0.666687 14.6667V1.33334C0.666687 0.965844 0.965844 0.666687 1.33334 0.666687H9.33334C9.70084 0.666687 10 0.965844 10 1.33334V3.66669C10 3.85094 10.1491 4.00003 10.3333 4.00003C10.5176 4.00003 10.6667 3.85094 10.6667 3.66669V1.33334C10.6667 0.597969 10.0687 0 9.33334 0H1.33334C0.597969 0 0 0.597969 0 1.33334V14.6667C0 15.402 0.597969 16 1.33334 16H9.33334C10.0687 16 10.6667 15.402 10.6667 14.6667V12.3333C10.6667 12.1491 10.5176 12 10.3333 12Z\"/>\n                            <path d=\"M15.8919 7.7542L11.8919 4.08754C11.7555 3.9632 11.5456 3.97263 11.4209 4.10804C11.2966 4.24379 11.3057 4.45473 11.4414 4.57907L14.8098 7.66663H4.33334C4.14909 7.66663 4 7.81573 4 7.99998C4 8.18423 4.14909 8.33332 4.33334 8.33332H14.8099L11.4414 11.4209C11.3057 11.5452 11.2966 11.7562 11.4209 11.8919C11.4867 11.9635 11.5765 12 11.6667 12C11.7471 12 11.8278 11.971 11.892 11.9124L15.892 8.24576C15.9609 8.1826 16 8.09342 16 7.99998C16 7.90654 15.9609 7.81735 15.8919 7.7542Z\"/>\n                        </svg>\n                        <span className='header-item-text'>Выйти</span>\n                    </div>\n                </div>\n            </div>\n\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => {setModalIsOpen(false)}}\n                style={customStyles}\n            >\n\n                <h1 className=\"modal-title\">Пользователи:</h1>\n                <div className=\"modal-users\">\n                    {\n                        users.map(user => <NavLink to={'/profile/' + user.userId} key={user.userId} className='modal-user'>\n                            {user.img\n                                ? <div className=\"modal-user-img\" style={{backgroundImage: `url(${user.img})`}}/>\n                                : <div className=\"modal-user-img\" style={{backgroundImage: `url(${defaultImg})`}}/>\n                            }\n                            <span className=\"modal-user-name\">{user.username}</span>\n                        </NavLink>)\n                    }\n                </div>\n\n            </Modal>\n        </div>\n    )\n}\n\nconst mapStateToProps = (state) => ({\n    username: state.currentUser.username,\n    userImg: state.currentUser.userImg,\n    users: state.users\n})\n\nexport default connect(mapStateToProps)(Header);","const ProfileSocial = ({social}) => {\n\n    return (\n        <div className=\"profile-social\">\n\n            {social.telegram\n                && <a href={'https://t.me/' + social.telegram} target='_blank' rel=\"noreferrer\" className=\"profile-social-item\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"  fill=\"#333333\">\n                        <g clipPath=\"url(#clip0)\">\n                            <path d=\"M11.2925 27.0691L17.2507 41.9938L25.0085 34.2205L38.2775 44.7884L47.9063 3.33472L-0.09375 22.6362L11.2925 27.0691ZM7.54871 22.594L30.4281 13.3937L12.2336 24.418L7.54871 22.594ZM34.5051 14.2105L19.3195 28.1302L17.4928 35.0274L14.1145 26.5653L34.5051 14.2105ZM20.4565 34.8035L21.3768 31.3284L22.7966 32.4589L20.4565 34.8035ZM36.5493 39.8191L22.7318 28.8145L43.5352 9.74531L36.5493 39.8191Z\"/>\n                        </g>\n                        <defs>\n                            <clipPath id=\"clip0\">\n                                <rect width=\"48\" height=\"48\" fill=\"white\"/>\n                            </clipPath>\n                        </defs>\n                    </svg>\n                </a>\n            }\n\n            {social.github\n                && <a href={'https://github.com/' + social.github} target='_blank' rel=\"noreferrer\" className=\"profile-social-item\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"#333333\">\n                        <path\n                            d=\"M24 0C10.8094 0 0 10.9032 0 24.0938C0 37.2078 10.7109 48 24 48C37.2726 48 48 37.2239 48 24.0938C48 10.9032 37.1906 0 24 0ZM28.2188 44.7656C26.8689 45.0469 25.4344 45.1875 24 45.1875C22.5656 45.1875 21.1311 45.0469 19.7812 44.7656V38.1844C19.7812 36.6094 20.2031 36.0469 20.7656 35.2874C21.052 34.96 21.2249 34.6663 22.5092 32.7283L20.3438 32.3906C14.7748 31.5751 12.5812 28.678 11.7092 26.428C10.5842 23.4188 11.1749 19.6498 13.2001 17.2595C13.5095 16.8937 13.7626 16.2748 13.5377 15.6281C13.1155 14.3342 13.1719 12.2812 13.4531 11.4935C14.9443 11.7067 16.4777 12.7749 17.7565 13.5469C18.3457 13.8907 18.6548 13.7999 18.9375 13.8281C19.9651 13.6143 21.568 13.0968 24.0282 13.0968C25.5469 13.0968 27.1501 13.3217 28.7252 13.7717C29.0068 13.7651 29.4595 14.0046 30.2439 13.5469C31.5806 12.7324 33.0619 11.7008 34.5469 11.4935C34.8281 12.2812 34.8845 14.3342 34.4626 15.6281C34.2374 16.2748 34.4905 16.8937 34.8003 17.2595C36.8251 19.6501 37.4158 23.4188 36.2908 26.428C35.4188 28.678 33.2252 31.5751 27.6562 32.3906L25.4908 32.7283C26.8184 34.7314 26.9583 34.9717 27.2347 35.2874C27.7969 36.0469 28.2188 36.6094 28.2188 38.1844V44.7656ZM31.0312 43.9501V38.1844C31.0312 36.5812 30.6936 35.5126 30.2435 34.7249C34.5187 33.572 37.5564 31.0404 38.9062 27.4124C40.3407 23.5876 39.694 19.0312 37.303 15.8811C37.7252 13.9969 37.7252 10.9874 36.7126 9.58118C36.2626 8.96265 35.6437 8.625 34.8563 8.625C34.8281 8.625 34.8281 8.625 34.8281 8.625C32.6473 8.74292 30.9309 9.84119 29.0907 10.9592C27.4032 10.5092 25.6875 10.2843 23.9718 10.2843C22.2283 10.2843 20.4844 10.5374 18.9379 10.9592C17.0006 9.79102 15.3007 8.73999 13.0594 8.625C12.3563 8.625 11.7374 8.96265 11.2874 9.58118C10.2751 10.9874 10.2751 13.9969 10.697 15.8811C8.30603 19.0312 7.6593 23.6155 9.09375 27.4124C10.4436 31.0404 13.4813 33.572 17.7565 34.7249C17.4075 35.3353 17.1313 36.123 17.0226 37.1891C16.1591 37.4868 15.4102 37.5839 14.7136 37.3792C13.979 37.162 13.4066 36.6716 12.9093 35.8352C11.7924 33.9587 9.88989 32.4269 7.72375 32.6261L7.97095 35.4276C8.974 35.3357 9.97229 36.397 10.4908 37.2719C11.3463 38.7125 12.4988 39.6573 13.9171 40.0763C14.97 40.3865 15.9324 40.3792 16.9688 40.158V43.9501C8.7843 41.0812 2.8125 33.2626 2.8125 24.0938C2.8125 12.4501 12.3563 2.8125 24 2.8125C35.6437 2.8125 45.1875 12.4501 45.1875 24.0938C45.1875 33.2626 39.2157 41.0812 31.0312 43.9501Z\"/>\n                    </svg>\n                </a>\n            }\n\n            {social.youtube\n                && <a href={'https://youtube.com/channel/' + social.youtube} target='_blank' rel=\"noreferrer\" className=\"profile-social-item\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"#333333\">\n                        <path d=\"M7.03125 42.2812H40.9688C44.8458 42.2812 48 39.1271 48 35.25V12.75C48 8.87292 44.8458 5.71875 40.9688 5.71875H7.03125C3.15417 5.71875 0 8.87292 0 12.75V35.25C0 39.1271 3.15417 42.2812 7.03125 42.2812ZM2.8125 12.75C2.8125 10.4238 4.70508 8.53125 7.03125 8.53125H40.9688C43.2949 8.53125 45.1875 10.4238 45.1875 12.75V35.25C45.1875 37.5762 43.2949 39.4688 40.9688 39.4688H7.03125C4.70508 39.4688 2.8125 37.5762 2.8125 35.25V12.75Z\"/>\n                        <path d=\"M16.9688 14.5789V33.6943L33.8906 23.9799L16.9688 14.5789ZM19.7812 19.3586L28.1719 24.0201L19.7812 28.8369V19.3586Z\"/>\n                    </svg>\n                </a>\n            }\n\n            {social.instagram\n            && <a href={'https://instagram.com/' + social.instagram} target='_blank' rel=\"noreferrer\" className=\"profile-social-item\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"#333333\">\n                    <path d=\"M7.03125 48H40.9688C44.8458 48 48 44.8458 48 40.9688V7.03125C48 3.15417 44.8458 0 40.9688 0H7.03125C3.15417 0 0 3.15417 0 7.03125V40.9688C0 44.8458 3.15417 48 7.03125 48ZM2.8125 7.03125C2.8125 4.70508 4.70508 2.8125 7.03125 2.8125H40.9688C43.2949 2.8125 45.1875 4.70508 45.1875 7.03125V40.9688C45.1875 43.2949 43.2949 45.1875 40.9688 45.1875H7.03125C4.70508 45.1875 2.8125 43.2949 2.8125 40.9688V7.03125Z\"/>\n                    <path d=\"M24 36.6562C30.9785 36.6562 36.6562 30.9785 36.6562 24C36.6562 17.0215 30.9785 11.3438 24 11.3438C17.0215 11.3438 11.3438 17.0215 11.3438 24C11.3438 30.9785 17.0215 36.6562 24 36.6562ZM24 14.1562C29.428 14.1562 33.8438 18.572 33.8438 24C33.8438 29.428 29.428 33.8438 24 33.8438C18.572 33.8438 14.1562 29.428 14.1562 24C14.1562 18.572 18.572 14.1562 24 14.1562Z\"/>\n                    <path d=\"M38.0625 14.1562C40.3887 14.1562 42.2812 12.2637 42.2812 9.9375C42.2812 7.61133 40.3887 5.71875 38.0625 5.71875C35.7363 5.71875 33.8438 7.61133 33.8438 9.9375C33.8438 12.2637 35.7363 14.1562 38.0625 14.1562ZM38.0625 8.53125C38.8378 8.53125 39.4688 9.16223 39.4688 9.9375C39.4688 10.7128 38.8378 11.3438 38.0625 11.3438C37.2872 11.3438 36.6562 10.7128 36.6562 9.9375C36.6562 9.16223 37.2872 8.53125 38.0625 8.53125Z\"/>\n                </svg>\n            </a>\n            }\n\n            {social.vk\n            && <a href={'https://vk.com/' + social.vk} target='_blank' rel=\"noreferrer\" className=\"profile-social-item\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\" fill=\"#333333\">\n                    <g clipPath=\"url(#clip0)\">\n                        <path d=\"M42.7255 28.7532L42.6995 28.729C42.2898 28.3499 41.0344 27.1259 40.611 26.5909C40.1141 25.9234 40.2287 25.4861 40.6012 24.8307C41.0717 24.0026 42.0147 22.7323 43.0127 21.3871C46.209 17.0801 48.2726 14.0985 47.8477 11.9806L47.6189 10.8493L35.8148 10.8545C35.7734 10.966 35.1574 13.6772 32.558 18.2939C30.6732 21.6414 29.4368 22.693 29.0014 22.8787L28.934 22.8581C28.7923 22.6827 28.5447 22.2094 28.4429 20.9894C28.3367 19.7114 28.4308 18.164 28.522 16.6677C28.6286 14.913 28.7205 13.3976 28.5004 12.3134L28.1419 10.547C27.7087 10.4776 26.1226 9.86449 21.7035 9.81789C17.8777 9.77863 16.7538 10.3323 16.2019 10.8203L14.3764 12.4345L16.6839 13.2123C17.562 13.5084 17.8535 13.8501 18.0927 15.5434C18.2487 16.6471 18.3304 18.502 18.1619 20.1579C17.9198 22.5323 17.3394 22.9741 17.3094 22.9976C17.2094 22.9634 16.3616 22.5917 14.8898 19.474C13.8688 17.3117 12.9738 14.7538 12.3197 12.8861C11.5712 10.7473 11.706 11.2027 11.3262 10.1922L-0.09375 10.1918L0.645265 12.1072C3.7262 20.0999 6.55299 26.3417 10.336 30.8249C14.5155 35.778 19.7099 38.3715 26.7067 38.3715H28.113V36.9625C28.113 35.6452 28.2217 34.6967 28.455 33.9775C28.5975 33.5394 28.7868 33.1772 28.9857 32.7975C29.2808 32.2383 29.5694 31.9987 29.7269 31.9631C29.8697 31.9304 30.1209 32.0354 30.3992 32.2434C31.1983 32.8404 31.8326 33.6249 32.5042 34.4556C33.4732 35.6544 34.4752 36.8935 36.0649 37.7048C36.9335 38.148 38.5258 38.3718 39.4022 38.3718C39.634 38.3718 47.8961 38.3715 47.9063 38.3715L47.8459 36.9045C47.7558 34.711 46.0328 31.9682 42.7255 28.7532ZM39.4567 35.5535H39.434C38.8298 35.5634 37.6766 35.3649 37.3411 35.1939C36.2842 34.6545 35.5456 33.7405 34.6898 32.6822C33.9387 31.7528 33.1619 30.7918 32.0805 29.9842C31.206 29.3307 30.4117 29.1396 29.7811 29.1396C29.5291 29.1396 29.3028 29.17 29.1087 29.2141C28.3766 29.3792 27.3296 29.9068 26.4972 31.4842C26.2625 31.933 25.9963 32.4412 25.7806 33.1061C25.5546 33.8017 25.414 34.5749 25.347 35.5153C20.0743 35.2152 15.9599 33.1251 12.4838 29.0056C9.25197 25.1753 6.70936 19.8178 4.01661 13.0087C4.21143 13.0087 9.0934 13.0094 9.38161 13.0094C9.46987 13.2578 9.56508 13.5301 9.66616 13.8185C10.3711 15.8333 11.3368 18.5922 12.4746 20.945C14.1039 24.3141 15.5918 25.8167 17.2987 25.8167C18.1509 25.8167 18.9152 25.4549 19.5088 24.7698C20.3551 23.7934 20.8466 22.1819 21.0114 19.8427C21.1414 17.9982 21.0205 16.161 20.8777 15.1486C20.7598 14.3157 20.5917 13.4413 20.1816 12.6579C21.9295 12.579 24.2699 12.7038 25.7527 12.917C25.8875 13.6523 25.7996 15.0976 25.7146 16.496C25.5092 19.8739 25.2972 23.3597 27.0817 24.9907C27.3956 25.2777 27.7284 25.4314 27.738 25.4376L28.6462 25.7169C28.9966 25.6086 31.0265 26.6404 34.8703 19.9194C36.1019 17.7659 37.2485 15.2844 37.8659 13.6637C39.2978 13.6607 44.1761 13.6662 44.7492 13.667C43.9373 15.4572 42.0133 18.0107 40.7557 19.7055C39.6593 21.1827 38.7126 22.4585 38.1571 23.436C37.1251 25.252 37.2987 26.8705 38.3735 28.2982L38.3903 28.3202C38.9902 29.0853 40.4715 30.5016 40.7788 30.7871C43.0046 32.9523 44.0772 34.5077 44.5877 35.5531H39.4567V35.5535Z\"/>\n                    </g>\n                    <defs>\n                        <clipPath id=\"clip0\">\n                            <rect width=\"48\" height=\"48\" fill=\"white\"/>\n                        </clipPath>\n                    </defs>\n                </svg>\n            </a>\n            }\n\n        </div>\n    )\n}\n\nexport default ProfileSocial;","export default __webpack_public_path__ + \"static/media/back.495936dd.svg\";","export default __webpack_public_path__ + \"static/media/edit.c33fe4d2.svg\";","export default __webpack_public_path__ + \"static/media/check.e4229381.svg\";","export default __webpack_public_path__ + \"static/media/edit-white.91e13f28.svg\";","import {useState} from \"react\";\n\nconst ProfileSocialEdit = ({social, setSocial}) => {\n\n    let [telegram, setTelegram] = useState(social.telegram || '');\n    let [github, setGithub] = useState(social.github || '');\n    let [youtube, setYoutube] = useState(social.youtube || '');\n    let [vk, setVk] = useState(social.vk || '');\n    let [instagram, setInstagram] = useState(social.instagram || '');\n\n    const updateSocial = (arr) => {\n        let social = arr;\n        let filterSocial = {...social};\n        for(const item in social){\n            social[item] === '' ? filterSocial[item] = null : filterSocial[item] = social[item];\n        }\n        setSocial(filterSocial)\n    }\n\n    return(\n        <div className=\"profile-social__edit\">\n\n            <div className=\"profile-social-item__edit\">\n                <h2 className=\"profile-social-title__edit\">Telegram:</h2>\n                <span className=\"profile-social-text__edit\">https://t.me/</span>\n                <input defaultValue={telegram} type=\"text\"\n                       onChange={(e) => {\n                           setTelegram(e.currentTarget.value);\n                           updateSocial({\n                               telegram: e.currentTarget.value,\n                               github, youtube, vk, instagram\n                           })\n                       }}\n                       className=\"profile-social-input__edit\"/>\n            </div>\n\n            <div className=\"profile-social-item__edit\">\n                <h2 className=\"profile-social-title__edit\">Github:</h2>\n                <span className=\"profile-social-text__edit\">https://github.com/</span>\n                <input defaultValue={github} type=\"text\"\n                       onChange={(e) => {\n                           setGithub(e.currentTarget.value);\n                           updateSocial({\n                               telegram,\n                               github: e.currentTarget.value,\n                               youtube, vk, instagram\n                           })\n                       }}\n                       className=\"profile-social-input__edit\"/>\n            </div>\n\n            <div className=\"profile-social-item__edit\">\n                <h2 className=\"profile-social-title__edit\">Youtube:</h2>\n                <span className=\"profile-social-text__edit\">https://www.youtube.com/channel/</span>\n                <input defaultValue={youtube} type=\"text\"\n                       onChange={(e) => {\n                           setYoutube(e.currentTarget.value);\n                           updateSocial({\n                               telegram, github,\n                               youtube: e.currentTarget.value,\n                               vk, instagram\n                           })\n                       }}\n                       className=\"profile-social-input__edit\"/>\n            </div>\n\n            <div className=\"profile-social-item__edit\">\n                <h2 className=\"profile-social-title__edit\">Vk:</h2>\n                <span className=\"profile-social-text__edit\">https://vk.com/</span>\n                <input defaultValue={vk} type=\"text\"\n                       onChange={(e) => {\n                           setVk(e.currentTarget.value);\n                           updateSocial({\n                               telegram, github, youtube,\n                               vk: e.currentTarget.value,\n                               instagram\n                           })\n                       }}\n                       className=\"profile-social-input__edit\"/>\n            </div>\n\n            <div className=\"profile-social-item__edit\">\n                <h2 className=\"profile-social-title__edit\">Instagram:</h2>\n                <span className=\"profile-social-text__edit\">https://instagram.com/</span>\n                <input defaultValue={instagram} type=\"text\"\n                       onChange={(e) => {\n                           setInstagram(e.currentTarget.value);\n                           updateSocial({\n                               telegram, github, youtube, vk,\n                               instagram: e.currentTarget.value\n                           })\n                       }}\n                       className=\"profile-social-input__edit\"/>\n            </div>\n\n        </div>\n    )\n}\n\nexport default ProfileSocialEdit;","import {useState} from \"react\";\nimport Modal from 'react-modal';\n\nimport back from \"../../assets/img/back.svg\";\nimport check from \"../../assets/img/check.svg\";\nimport editWhite from \"../../assets/img/edit-white.svg\";\nimport defaultImg from \"../../assets/img/userImg.svg\";\nimport ProfileSocialEdit from \"./ProfileSocialEdit\";\n\nModal.setAppElement('#root')\n\nconst ProfileEdit = (props) => {\n\n    const customStyles = {\n        content : {\n            top                   : '50%',\n            left                  : '50%',\n            right                 : 'auto',\n            bottom                : 'auto',\n            marginRight           : '-50%',\n            transform             : 'translate(-50%, -50%)'\n        },\n        overlay: {\n            backgroundColor       : 'rgba(51, 51, 51, 0.6)'\n        }\n    };\n\n    const [username, setUsername] = useState(props.username);\n    const [description, setDescription] = useState(props.description);\n    const [img, setImg] = useState(props.img);\n    const [newImg, setNewImg] = useState('');\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    const [social, setSocial] = useState({...props.social});\n\n    const updateImg = async (e) => {\n        e.preventDefault();\n        await props.updateProfile(newImg, setImg, img, username, description);\n        setNewImg('');\n    }\n\n    const updateProfile = async () => {\n        await props.updateProfile(newImg, setImg, img, username, description, social);\n        props.setIsEdit(false)\n    }\n\n    return (\n        <div className='container'>\n            \n            <div className=\"profile-actions\">\n                <img src={back} alt=\"back\" className=\"profile-back\"\n                     onClick={() => props.setIsEdit(false)}/>\n                <img src={check} alt=\"check\" className=\"profile-check\"\n                     onClick={() => updateProfile()}/>\n            </div>\n            \n            <div className=\"profile-info\">\n\n                <div className=\"profile-photo-block\">\n\n                    {img\n                        ? <div alt=\"userImg\" className=\"profile-photo\" style={{backgroundImage: `url(${img})`}} />\n                        : <div alt=\"userImg\" className=\"profile-photo\" style={{backgroundImage: `url(${defaultImg})`}} />\n                    }\n\n                    <div className=\"profile-photo-overlay\" onClick={() => setModalIsOpen(true)}>\n                        <img src={editWhite} alt=\"edit\"/>\n                    </div>\n\n                </div>\n\n                <div className=\"profile-info-block\">\n                    <input onChange={(e) => setUsername(e.target.value)}\n                           className=\"profile-username edit\" value={username} maxLength='15' />\n                    <textarea onChange={(e) => setDescription(e.target.value)}\n                              className=\"profile-description edit\" value={description} maxLength='150' rows='3' />\n                </div>\n\n            </div>\n            \n            <ProfileSocialEdit social={props.social} setSocial={setSocial} />\n\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => {setModalIsOpen(false)}}\n                style={customStyles}\n            >\n                <form onSubmit={(e) => updateImg(e)}>\n                    <h1 className='modal-title'>Поменять изображение</h1>\n                    <p className=\"modal-description\">Вставьте URL-ссылку картинки:</p>\n                    <input onChange={(e) => setNewImg(e.currentTarget.value)}\n                        placeholder='https://example.[jpg/png]' type=\"text\"\n                        className='modal-input' pattern='https?:\\/\\/.*\\.(?:png|jpg)'\n                        value={newImg} title='Поддерживаются картинки в формате .png и .jpg'\n                        required\n                    />\n                    <button className=\"modal-submit\">Сохранить</button>\n                </form>\n            </Modal>\n        </div>\n    )\n}\n\nexport default ProfileEdit;","import {NavLink} from 'react-router-dom';\nimport {useState, useEffect} from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport ProfileSocial from \"./ProfileSocial\";\n\nimport Header from '../Header';\nimport defaultImg from '../../assets/img/userImg.svg';\nimport back from '../../assets/img/back.svg';\nimport edit from '../../assets/img/edit.svg';\nimport ProfileEdit from \"./ProfileEdit\";\n\nexport const Profile = (props) => {\n    const [username, setUsername] = useState(props.username);\n    const [description, setDescription] = useState(props.description);\n    const [img, setImg] = useState(props.img);\n    const [isEdit, setIsEdit] = useState(false);\n\n    useEffect(() => {\n        setUsername(props.username)\n        setImg(props.img)\n        setDescription(props.description || 'Описание отсутствует :(')\n    }, [props])\n    \n    return (\n        <div className='profile'>\n            {!props.isFound ?\n                <Redirect to=\"/error\" /> :\n                <div>\n\n                    <Header />\n\n                    {!isEdit\n                        ? <div className=\"container\">\n\n                            <div className=\"profile-actions\">\n                                <NavLink to=\"/chat\"> <img src={back} alt=\"back\" className=\"profile-back\"/> </NavLink>\n                                {props.isCurrent\n                                && <img src={edit} alt=\"edit\" className=\"profile-edit\"\n                                        onClick={() => setIsEdit(true)}/>\n                                }\n                            </div>\n                            <div className=\"profile-info\">\n\n                                <div className=\"profile-photo-block\">\n                                    {img\n                                        ? <div alt=\"userImg\" className=\"profile-photo\" style={{backgroundImage: `url(${img})`}} />\n                                        : <div alt=\"userImg\" className=\"profile-photo\" style={{backgroundImage: `url(${defaultImg})`}} />\n                                    }\n                                </div>\n\n                                <div>\n                                    <h2 className=\"profile-username\">{username}</h2>\n                                    <p className=\"profile-description\">{description}</p>\n                                </div>\n\n                            </div>\n\n                            <ProfileSocial social={props.social} />\n\n                        </div>\n                        : <ProfileEdit\n                            username={username} setIsEdit={setIsEdit}\n                            img={img} description={description} social={props.social}\n                            updateProfile={props.updateProfile}\n                        />\n                    }\n\n                </div>\n            }\n        </div>\n    )\n}","import {Component} from 'react';\nimport {profileApi} from \"../../api/api\";\nimport {compose} from \"redux\";\nimport {connect} from \"react-redux\";\nimport { withRouter, Redirect } from 'react-router-dom'\nimport {Profile} from \"./Profile\";\nimport Loading from \"../common/Loading/Loading\";\n\nimport firebase from \"../../firebase\";\nimport 'firebase/auth';\n\nclass ProfileContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isFound: true,\n            img: this.props.img,\n            username: this.props.username,\n            description: this.props.description,\n            social: this.props.social,\n            isLoading: true,\n            isRedirect: false,\n            isCurrent: false\n        };\n    }\n\n    refreshProfile = async () => {\n        let userId = this.props.match.params.userId;\n        if(userId){\n            const res = await profileApi.getUserProfile(userId).then(doc => doc.data())\n            if(res.userId) {\n                this.setState({\n                    img: res.img,\n                    username: res.username,\n                    description: res.description,\n                    social: res.social,\n                    isLoading: false,\n                    isCurrent: false\n                })\n            }\n        }else{\n            this.setState({\n                img: this.props.img,\n                username: this.props.username,\n                description: this.props.description,\n                social: this.props.social,\n                isLoading: false,\n                isCurrent: true\n            })\n        }\n    }\n\n    updateProfile = async (newImg, setImg, img, username, description, social) => {\n        if(newImg) setImg(newImg);\n        await  profileApi.updateProfile(newImg || img, username, description, social);\n    }\n\n    async componentDidMount() {\n        let user = firebase.auth().currentUser;\n        if(user && user.emailVerified){\n            this.setState({isRedirect: false})\n            await this.refreshProfile()\n        }else{\n            this.setState({isRedirect: true});\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState){\n        if(this.props.match.params.userId !== prevProps.match.params.userId\n            || this.state.username !== prevState.username\n            || this.props !== prevProps){\n            await this.refreshProfile();\n        }\n    }\n\n    render(){\n        if(this.state.isRedirect) return <Redirect to=\"/login\"/>\n        return(\n            <div>\n                {this.state.isLoading\n                    ? <Loading />\n                    : <Profile\n                        img={this.state.img} username={this.state.username}\n                        updateProfile={this.updateProfile} isFound={this.state.isFound}\n                        isCurrent={this.state.isCurrent} description={this.state.description}\n                        social={this.state.social}\n                    />\n                }\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (store) => ({\n    username: store.currentUser.username,\n    img: store.currentUser.userImg,\n    description: store.currentUser.description,\n    social: store.currentUser.social\n})\n\nexport default compose(\n    connect(mapStateToProps, {}),\n    withRouter\n)(ProfileContainer);"],"sourceRoot":""}