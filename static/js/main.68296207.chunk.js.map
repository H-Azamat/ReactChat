{"version":3,"sources":["assets/img/loading.gif","components/common/Loading/Loading.jsx","redux/store.js","firebase.js","assets/img/userImg.svg","components/Chat/Message.jsx","components/Chat/Messages.jsx","App.js","index.js"],"names":["Loading","className","src","loading","alt","SET_CURRENT_USER","UPDATE_MESSAGES","SET_USERS","initialState","messages","users","currentUser","isInitial","setCurrentUser","uid","username","userImg","description","social","type","updateMessages","setUsers","store","createStore","state","action","window","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","Message","props","currentUserId","userId","avatar","defaultImg","to","message","date","db","firestore","connect","id","useState","isLoader","setIsLoader","limit","setLimit","getData","filter","item","useEffect","getMessages","collection","orderBy","limitToLast","onSnapshot","snapshot","forEach","doc","push","data","key","messagesBlock","useRef","current","setTimeout","scrollTop","scrollHeight","onScroll","ref","map","elem","img","ChatContainer","lazy","ProfileContainer","Login","Register","Error","getUsers","a","auth","onAuthStateChanged","user","from","fetchData","exact","path","render","fallback","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.68296207.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.ad992768.gif\";","import loading from '../../../assets/img/loading.gif';\n\nconst Loading = () => {\n    return(\n        <div className=\"loading\">\n            <img src={loading} alt=\"loading...\" className=\"loading-gif\" />\n        </div>\n    )\n}\n\nexport default Loading;","import {createStore} from \"redux\";\n\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\";\nconst UPDATE_MESSAGES = \"UPDATE_MESSAGES\";\nconst SET_USERS = \"SET_USERS\";\n\nlet initialState = {\n    messages: [],\n    users: [],\n    currentUser: {},\n    isInitial: false\n}\n\nconst messagesReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                currentUser: {...action.currentUser},\n                isInitial: action.isInitial\n            }\n        case UPDATE_MESSAGES:\n            return {\n                ...state,\n                messages: [...action.messages]\n            }\n        case SET_USERS:\n            return {\n                ...state,\n                users: [\n                    ...action.users\n                ]\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setCurrentUser = (uid = '', username = '', userImg = null, description = '', social = {}, isInitial = false) => {\n    return {type: SET_CURRENT_USER, currentUser: {uid, username, userImg, description, social}, isInitial}\n}\n\nexport const updateMessages = (messages) => {\n    return {type: UPDATE_MESSAGES, messages}\n}\n\nexport const setUsers = (users) => {\n    return {type: SET_USERS, users}\n}\n\nconst store = createStore(messagesReducer);\n\nwindow.store = store;\nexport default store;","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyDz6pSdf4LCf1YQn5x76haqeGwwPDTvP_U\",\n    authDomain: \"reactchat-b8de4.firebaseapp.com\",\n    projectId: \"reactchat-b8de4\",\n    storageBucket: \"reactchat-b8de4.appspot.com\",\n    messagingSenderId: \"318740535879\",\n    appId: \"1:318740535879:web:7c66edf44f5ebf3e09ef62\"\n};\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n\nexport default firebase;","export default __webpack_public_path__ + \"static/media/userImg.741810bd.svg\";","import { NavLink } from \"react-router-dom\";\nimport defaultImg from '../../assets/img/userImg.svg';\n\nconst Message = (props) => {\n    return(\n        <div className={`chat-message__block ${props.currentUserId === props.userId ? 'my-message__block' : ''}`}>\n            <img src={props.avatar || defaultImg} alt=\"avatar\" className=\"message-avatar\"/>\n            <div className={`chat-message ${props.currentUserId === props.userId ? 'my-message' : ''}`}>\n                {props.currentUserId !== props.userId && <NavLink to={'/profile/' + props.userId} className=\"chat-message-username\">{props.username}</NavLink>}\n                <p className=\"chat-message-text\">{props.message}</p>\n                <span className=\"chat-message-date\">{props.date}</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Message;","import { useEffect, useRef, useState } from \"react\";\nimport { connect } from 'react-redux';\nimport Loading from \"../common/Loading/Loading\";\nimport Message from \"./Message\";\nimport { updateMessages } from \"../../redux/store\";\nimport firebase from \"../../firebase\";\n\nexport const db = firebase.firestore();\n\nconst Messages = (props) => {\n \n    let [isLoader, setIsLoader] = useState(true);\n    let [limit, setLimit] = useState(15);\n\n    const getData = (id) => props.users.filter(item => item.userId === id)[0]\n\n\n    useEffect(() => {\n        const getMessages = db.collection(\"messages\").orderBy(\"key\", \"asc\").limitToLast(limit).onSnapshot((snapshot) => {\n            let messages = [];\n            snapshot.forEach(doc => messages.push({\n                userId: doc.data().id,\n                message: doc.data().message,\n                avatar: doc.data().avatar,\n                username: doc.data().username,\n                date: doc.data().date,\n                key: doc.data().key\n            }));\n            props.updateMessages(messages);\n            setIsLoader(false);\n        })\n\n        return() => {\n            getMessages();\n        }\n    }, [limit])\n\n    const messagesBlock = useRef(null);\n    if(messagesBlock.current && limit === 15){\n        setTimeout(() => {\n            messagesBlock.current.scrollTop = messagesBlock.current.scrollHeight;\n        }, 1)\n    }\n\n    const isScrollTop = () => {\n        if(messagesBlock.current.scrollTop === 0){\n            setLimit(limit + 15)\n        }\n    }\n    return(\n        <div onScroll={() => {isScrollTop()}} className=\"chat-messages\" ref={messagesBlock}>\n            {isLoader \n                ? <Loading />\n                :<div>\n                    {props.messages.map((elem) => <Message key={elem.key} userId={elem.userId} avatar={getData(elem.userId).img} message={elem.message} username={getData(elem.userId).username} currentUserId={props.id} date={elem.date} />)}\n                </div>\n            }\n        </div>\n    )\n}\n\nlet mapStateToProps = (state) => ({\n      messages: state.messages,\n      users: state.users,\n      id: state.currentUser.uid,\n})\n\nexport default connect(mapStateToProps, {updateMessages})(Messages);","import {Suspense, lazy, useEffect} from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport {setCurrentUser, setUsers} from \"./redux/store\";\nimport firebase from './firebase';\nimport 'firebase/auth';\n\nimport './App.css';\n\nimport Loading from './components/common/Loading/Loading';\nimport {db} from \"./components/Chat/Messages\";\n\n;\n\nconst ChatContainer = lazy(() => import('./components/Chat/ChatContainer'));\nconst ProfileContainer = lazy(() => import('./components/Profile/ProfileContainer'));\nconst Login = lazy(() => import('./components/Login/Login'));\nconst Register = lazy(() => import('./components/Register/Register'));\nconst Error = lazy(() => import('./components/Error/Error'));\n\nfunction App({setCurrentUser, isInitial, setUsers}){\n\n    const getUsers = async () => {\n        await db.collection(\"users\").onSnapshot((snapshot) => {\n            let users = [];\n            snapshot.forEach(doc => users.push({\n                userId: doc.data().userId,\n                img: doc.data().img,\n                username: doc.data().username,\n                description: doc.data().description,\n                social: doc.data().social\n            }));\n            setUsers(users);\n            firebase.auth().onAuthStateChanged((user) => {\n                if (user) {\n                    const currentUser = users.filter(item => item.userId === user.uid)[0];\n                    setCurrentUser(currentUser.userId, currentUser.username, currentUser.img, currentUser.description, currentUser.social, true);\n                } else {\n                    setCurrentUser('', '', null, '', {}, true);\n                    return <Redirect from='/' to=\"/login\"/>\n                }\n            })\n        })\n    }\n\n\tuseEffect(() => {\n\t    const fetchData = async () => {\n            await getUsers();\n        }\n        fetchData()\n\t})\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{isInitial\n\t\t\t\t? <div>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/chat\" render={() => <Suspense fallback={<Loading />}><ChatContainer /></Suspense> } />\n\t\t\t\t\t\t<Route exact path=\"/profile/:userId?\" render={() => <Suspense fallback={<Loading />}><ProfileContainer /></Suspense> } />\n\t\t\t\t\t\t<Route path=\"/login\" render={() => <Suspense fallback={<Loading />}><Login /></Suspense> } />\n\t\t\t\t\t\t<Route path=\"/register\" render={() => <Suspense fallback={<Loading />}><Register /></Suspense> } />\n\t\t\t\t\t\t<Redirect exact from=\"/\" to=\"/chat\" />\n\t\t\t\t\t\t<Route path=\"*\" render={() => <Suspense fallback={<Loading />}><Error /></Suspense>} />\n\t\t\t\t\t</Switch>\n\t\t\t\t</div>\n\t\t\t\t: <Loading />\n\t\t\t}\t\n\t\t</div>\n\t)\n}\n\nconst mapStateToProps = (store) => ({\n\tisInitial: store.isInitial\n})\n\nexport default connect(mapStateToProps, {setUsers, setCurrentUser})(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './redux/store';\n\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}